@Library('ciElastestConnect') _

// initialization of the context for the library
elastest_lib.setContext(this)

// initialization of the runnable object to access elastest methods inside the pipeline
def elastest= elastest_lib.getElastestMethods()

// lite version of elastest
// elastest_lib.setLite('')

//elastest version
//elastest_lib.setVersion('20171012') doesn't work the inspect --api

// definition of nodes is managed by the library
elastest_lib.pipeline({
   stage "Container Prep"
      def mycontainer = elastest.ctx.docker.image('elastest/ci-docker-e2e')
      mycontainer.pull()
      mycontainer.inside("-u jenkins -v /var/run/docker.sock:/var/run/docker.sock:rw -v /dev/shm:/dev/shm")  {
         sh '/usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf &'
         git 'https://github.com/elastest/elastest-device-emulator-service.git'

        stage "docker conf"
           elastest.connect2ElastestNetwork()
            
        stage "E2E tests"
            echo ("E2E tests")
            def etEmpApi = elastest.getEtmUrl()
            // sh "cd e2e-test; mvn clean test -DetEmpApi=${etEmpApi}"
            sh "cd e2e-test; mvn -B clean test -DetEmpApi=${etEmpApi}"
            step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
          }
})